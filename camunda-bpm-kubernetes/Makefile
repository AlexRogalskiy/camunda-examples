# @afirth 2019-05

# Make config
.SHELLFLAGS := -eu -o pipefail -c
MAKEFLAGS += --warn-undefined-variables
SHELL = /bin/bash
.SUFFIXES:

manifest := ./generated-manifest.yaml
templates = kustomization.yaml \
            skaffold.yaml

export GCLOUD_PROJECT := $(shell gcloud config get-value project 2>/dev/null)

# creates and applies manifests with kustomize
.PHONY: all
all: check-kustomize manifests apply

# builds and uploads docker image, then deploys with skaffold
.PHONY: skaffold
skaffold: check-skaffold manifests
	envsubst < skaffold.yaml.tmpl > skaffold.yaml
	skaffold run

# applies the manifests already generated
.PHONY: apply
apply:
	kubectl apply -f $(manifest)

# generates but doesn't deploy manifests
.PHONY: manifests
manifests: kustomization.yaml
	echo "## Generated by Kustomize @"`git describe --always --abbrev=0 --match "NOT A TAG" --dirty="-DIRTY"` > $(manifest)
	kustomize build >> $(manifest)

# generates and dry-runs the manifests
.PHONY: dry-run
dry-run: manifests
	kubectl apply -o yaml --dry-run -f $(manifest)

# delete all templates and manifests
.PHONY: clean
clean:
	rm $(templates) $(manifest)

#calls envsubst to replace things like GCLOUD_PROJECT
$(templates): %.yaml: %.yaml.tmpl
	envsubst < $^ > $@

# dependency checks
.PHONY: check-kustomize
check-kustomize: kustomization.yaml
	@which kustomize 1>/dev/null || (echo kustomize not found. Try go get sigs.k8s.io/kustomize; exit 21)

.PHONY: check-skaffold
check-skaffold: skaffold.yaml
	@which skaffold 1>/dev/null || (echo skaffold not found. Try https://skaffold.dev/docs/getting-started/#installing-skaffold and make sure it's on your PATH; exit 22)
